services:
  django:
    build:
      dockerfile: Dockerfile
    volumes:
      - ../../:/app
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
      redis:
        condition: service_healthy
        restart: true
    networks:
      - social_media
    restart: on-failure

  postgres:
    image: postgres:17
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - social_media
    restart: unless-stopped

  redis:
    image: redis:alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - redis_data:/data
    networks:
      - social_media
    restart: unless-stopped

networks:
  social_media:
    driver: bridge

volumes:
  postgres_data:
  redis_data: